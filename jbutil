#!/usr/bin/env node

//var argv = require('yargs').argv;
var glob = require('glob');
var sh = require('shelljs');
var fs = require('fs');
var merge = require('deepmerge');
var getopt = require('node-getopt');

var cwd = sh.pwd();
var subCount = 0;

var mergedConfig = getMergedConfig();

// local options
var options = [
    ['','config', 'display merged config'],
];

// add jbh-* hook options
doExtScripts(function(ext) {
    options = options.concat(ext.getOptions());
});

// help
options = options.concat([
    ['h','help', 'display this help']
]);

var getopt = new getopt(options);

getopt.bindHelp();     // bind option 'help' to default action
opt = getopt.parseSystem(); // parse command line

var helpTxt = 
    "Usage: jblast [OPTION]\n" +
    "[[OPTIONS]]\n" +
    "\n";

doExtScripts(function(ext) {
    helpTxt += ext.getHelpText();
});

getopt.setHelp(helpTxt);


/* Display help if no arguments are passed */
if (!process.argv.slice(2).length) {
	getopt.showHelp();
	process.exit(1);
}

/************************************************
 * process commands
 ************************************************/

doExtScripts(function(ext,path) {
    //console.log("mergedConfig",mergedConfig);
    ext.process(opt,path,mergedConfig);
});

console.log("opt",opt);
if (typeof opt.options['config'] !== 'undefined') proc_Config();  




// --config - list config
function proc_Config() {

    console.log('Merged jbrowse configs from config/globals.js & config.js:');
    console.log( mergedConfig );
}

/************************************************
 * Utility functions
 ************************************************/

/**
 * Traverse jbutils-ext.js of submodules (jbh-*)
 * @param {type} cb
 * @returns {undefined}
 */
function doExtScripts(cb) {
    var extScripts = glob.sync('node_modules/jbh-*');

    for(var i in extScripts) {
        //console.log('script found - ',extScripts[i]);
        var path = cwd+'/'+extScripts[i];
        var extScript = './'+extScripts[i]+'/bin/jbutil-ext.js';
        if (fs.existsSync(extScript)) { 
          var ext = require(extScript);
          cb(ext,path);
        }
    }
}

/**
 * Returned merged jbrowse config.  
 * Merged from jbh-* config/globals.js, local config/globals.js, & config.js
 */
function getMergedConfig() {
    var merged = {};

    var scripts = glob.sync('node_modules/jbh-*');

    for(var i in scripts) {
        //console.log('script found - ',scripts[i]);
        var path = cwd+'/'+scripts[i];
        var extScript = './'+scripts[i]+'/config/globals.js';
        if (fs.existsSync(extScript)) { 
          // do something 
          var extConfig = require(extScript).globals;
          //console.log('extConfig',extConfig);
          merged = merge(extConfig,merged);
        }
    }

    var config = require('./config/globals.js').globals;
    //console.log('config',config);
    merged = merge(merged,config);

    return merged.jbrowse;
}
