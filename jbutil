#!/usr/bin/env node

var sh = require('shelljs');
var getopt = require('node-getopt');
var jblib = require('./bin/jblib');


var subCount = 0;

initFunctions();

var mergedConfig = jblib.getMergedConfig();

// local options
var options = [
    ['','config', '(JBServer) display merged config']
    //['','testsetupindex','testsetupinex']
];

// add jbh-* hook options
jblib.doExtScripts(function(ext,path) {
    console.log('ext options',ext.getOptions(),path);
    options = options.concat(ext.getOptions());
});

// help
options = options.concat([
    ['h','help', 'display this help']
]);

var getopt = new getopt(options);

getopt.bindHelp();     // bind option 'help' to default action
opt = getopt.parseSystem(); // parse command line

var helpTxt = 
    "Usage: jbutil [OPTION]\n" +
    "[[OPTIONS]]\n" +
    "\n";

jblib.doExtScripts(function(ext) {
    helpTxt += ext.getHelpText();
});

getopt.setHelp(helpTxt);


/* Display help if no arguments are passed */
if (!process.argv.slice(2).length) {
	getopt.showHelp();
	process.exit(1);
}

/************************************************
 * process commands
 ************************************************/

jblib.doExtScripts(function(ext,path) {
    //console.log("mergedConfig",mergedConfig);
    ext.process(opt,path,mergedConfig);
});

//console.log("opt",opt);
if (typeof opt.options['config'] !== 'undefined') proc_Config();  

if (typeof opt.options['testsetupindex'] !== 'undefined') proc_setupindex();  

function proc_setupindex() {
    buildHtml();
}

// --config - list config
function proc_Config() {

    console.log('Merged jbrowse configs from config/globals.js & config.js:');
    console.log( mergedConfig );
}

/************************************************
 * Utility functions
 ************************************************/
function initFunctions() {
}

    